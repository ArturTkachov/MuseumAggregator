{"version":3,"sources":["types/ColorName.ts","components/SearchBar.tsx","components/header/MainSearchBar.js","components/IconButton.tsx","assets/icons/red/menuRed.svg","components/header/Menu.js","assets/icons/white/xWhite.svg","components/header/MenuContents.js","components/header/MenuButton.js","App.js","types/PageType.ts","reportWebVitals.js","components/main/PageDescription.tsx","components/RedButton.tsx","components/main/home/TryNowButton.tsx","assets/svg/ManWithLaptop.svg","components/main/home/Home.tsx","index.js"],"names":["ColorName","SearchBar","props","formClass","size","className","onSubmit","handleSubmit","type","value","onChange","handleChange","MainSearchBar","state","bind","e","this","setState","target","preventDefault","React","PureComponent","IconButton","memo","iconColor","hoverIconColor","bgColor","hoverBackgroundColor","iconClass","bgClass","onClick","handleClick","src","alt","menuRoot","document","getElementById","Menu","isOpen","menuRef","useRef","menu","current","useEffect","handleOutsideClick","contains","window","addEventListener","removeEventListener","isInitialMount","style","opacity","transform","ReactDOM","createPortal","id","ref","children","MenuCloseButton","iconSrc","Yellow","MenuItem","text","to","toLowerCase","MenuList","menuItems","map","MenuButton","White","Red","App","PageType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PageDescription","pageInfos","home","heading","description","collections","random","favourites","attribution","pageType","RedButton","TryNowButton","navigate","useNavigate","Home","render","StrictMode","path","element","index"],"mappings":"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","file":"static/js/main.8613482c.chunk.js","sourcesContent":["export enum ColorName{\n  White = \"white\",\n  Yellow = \"yellow\",\n  Red = \"red\",\n  DarkRed = \"dark-red\"\n}\n","import React, {FC} from 'react';\nimport './css/SearchBar.css'\n\ninterface Props{\n  size: \"small\" | \"normal\",\n  value: string,\n  handleSubmit: () => void,\n  handleChange: () => void\n}\n\nconst SearchBar:FC<Props> = (props) => {\n  const formClass = `search-bar ${props.size}`;\n\n  return (\n    <form className={formClass} onSubmit={props.handleSubmit}>\n      <input type=\"text\" value={props.value} onChange={props.handleChange}/>\n      <button/>\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport SearchBar from '../SearchBar';\n\nclass MainSearchBar extends React.PureComponent{\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e){\n    this.setState({\n      value: e.target.value,\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    this.setState({\n      value: \"\",\n    });\n  }\n\n  render() {\n    return (\n      <SearchBar size=\"normal\" value={this.state.value}\n                 handleChange={this.handleChange}\n                 handleSubmit={this.handleSubmit}/>\n    );\n  }\n}\n\nexport default MainSearchBar;\n","import React from 'react';\nimport { ColorName } from '../types/ColorName';\nimport './css/IconButton.css';\n\ninterface Props{\n  size: \"small\" | \"normal\" | \"big\",\n  src: string,\n  hoverIconColor?: ColorName,\n  hoverBackgroundColor?: ColorName,\n  handleClick: () => void;\n}\n\nconst IconButton = React.memo<Props>((props) => {\n  const iconColor = props.hoverIconColor;\n  const bgColor = props.hoverBackgroundColor;\n\n  const iconClass = (iconColor) ? `icon-${iconColor}` : \"\";\n  const bgClass = (bgColor) ? `bg-${bgColor}` : \"\";\n  const className = `icon-button ${props.size} ${iconClass} ${bgClass}`;\n\n  return (\n    <button className={className}  onClick={props.handleClick}>\n      <img src={props.src} alt=\"icon-button\"/>\n    </button>\n  );\n});\n\nexport default IconButton;\n","export default __webpack_public_path__ + \"static/media/menuRed.c66de543.svg\";","import React, {useRef, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport \"../css/header/Menu.css\";\n\nconst menuRoot = document.getElementById(\"menu-root\");\n\nconst Menu = (props) => {\n  const isOpen = props.isOpen;\n\n  const menuRef = useRef(null);\n  const menu = menuRef.current;\n  useEffect(()=>{\n    const handleOutsideClick = (e) => {\n      if(isOpen && !menu.contains(e.target)) props.handleOutsideClick();\n    };\n    window.addEventListener('click', handleOutsideClick);\n\n    return () => window.removeEventListener('click', handleOutsideClick);\n  });\n\n  const isInitialMount = useRef(true);\n  useEffect(()=>{\n    if(isInitialMount.current){\n      isInitialMount.current = false;\n    }else{\n      if(isOpen) {\n        menu.style.opacity = \"1\";\n        menu.style.transform = \"translate(0, 0)\";\n      }else{\n        menu.style.opacity = \"0.7\";\n        menu.style.transform = \"translate(100%, 0)\";\n      }\n    }\n  });\n\n  return ReactDOM.createPortal(\n    <div id=\"menu\" ref={menuRef}>\n      {props.children}\n    </div>,\n    menuRoot\n  );\n};\n\nexport default Menu;\n","export default __webpack_public_path__ + \"static/media/xWhite.a7b0b718.svg\";","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport IconButton from '../IconButton';\nimport {ColorName} from '../../types/ColorName';\nimport iconSrc from '../../assets/icons/white/xWhite.svg';\n\nconst MenuCloseButton = (props) =>\n    <IconButton size=\"normal\" src={iconSrc}\n                hoverIconColor={ColorName.Yellow}\n                handleClick={props.handleClick}/>;\n\nconst MenuItem = (props) => {\n  const text = props.text;\n\n  return (\n    <li className=\"menu-item\">\n      <Link to={`${text.toLowerCase()}`}>{text}</Link>\n    </li>);\n};\n\nconst MenuList = React.memo(() => {\n  const itemTexts = [\"Home\", \"Collections\", \"Random\", \"Favourites\", \"Attribution\"];\n  const menuItems = itemTexts.map(\n    text => <MenuItem key={text} text={text}/>\n  );\n\n  return (\n    <nav>\n      <ul>{menuItems}</ul>\n    </nav>\n  );\n});\n\nexport {MenuCloseButton, MenuList};\n","import React from 'react';\nimport IconButton from '../IconButton';\nimport {ColorName} from '../../types/ColorName';\nimport iconSrc from '../../assets/icons/red/menuRed.svg';\nimport Menu from './Menu';\nimport {MenuCloseButton, MenuList} from './MenuContents';\n\nclass MenuButton extends React.PureComponent{\n  constructor(props) {\n    super(props);\n    this.state= {\n      isOpen: false\n    };\n\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleOutsideClick(){\n    this.setState({\n      isOpen: false\n    });\n  }\n\n  handleClick(){\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    const isOpen = this.state.isOpen;\n    return(\n      <>\n        <IconButton size=\"normal\" src={iconSrc}\n                    hoverIconColor={ColorName.White}\n                    hoverBackgroundColor={ColorName.Red}\n                    handleClick={this.handleClick}/>\n\n        <Menu isOpen={isOpen} handleOutsideClick={this.handleOutsideClick}>\n          <MenuCloseButton handleClick={this.handleClick}/>\n          <MenuList/>\n        </Menu>\n      </>\n    );\n  }\n}\n\nexport default MenuButton;\n","import {Outlet} from 'react-router-dom';\nimport './App.css';\nimport MainSearchBar from './components/header/MainSearchBar';\nimport MenuButton from './components/header/MenuButton';\n\nfunction App() {\n  return (\n    <div id=\"wrapper\">\n      <header>\n        <span id=\"name\">Nomen</span>\n        <div id=\"right-panel\">\n          <MainSearchBar/>\n          <MenuButton/>\n        </div>\n      </header>\n\n      <Outlet/>\n\n    </div>\n  );\n}\n\nexport default App;\n","export enum PageType{\n  Home= \"home\",\n  Collections = \"collections\",\n  Random = \"random\",\n  Favourites = \"favourites\",\n  Attribution = \"attribution\"\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { FC } from 'react';\nimport {PageType} from '../../types/PageType';\nimport '../css/main/PageDescription.css'\n\ninterface Props{\n  pageType: PageType;\n}\n\nconst PageDescription:FC<Props> = (props) => {\n  const pageInfos = {\n    home: {\n      heading: \"Explore the world of art\",\n      description:\n        \"Nomen is a website wich helps you learn a bit more about diverse \" +\n        \"cultures of humanity by providing a simple way of browsing pieces \" +\n        \"of art from all around the world.\"\n    },\n    collections: {\n      heading: \"Collections\",\n      description:\n        \"Collections are randomly generated compilations of varied pieces \" +\n        \"of art from one of the following categories.\"\n    },\n    random: {\n      heading: \"Random\",\n      description: \"A random piece of art.\"\n    },\n    favourites: {\n      heading: \"Favourites\",\n      description: \"Pieces of art you found most interesting or exciting\"\n    },\n    attribution: {\n      heading: \"Attribution\",\n      description: \"\"\n    }\n  };\n\n  const heading:string = pageInfos[props.pageType].heading;\n  const description:string = pageInfos[props.pageType].description;\n\n  return (\n    <section  id=\"page-description\">\n      <h1>{heading}</h1>\n      <p className=\"border-top border-bottom\">{description}</p>\n    </section>\n  );\n};\n\nexport default PageDescription;\n","import { FC } from 'react';\nimport './css/RedButton.css';\n\ninterface Props{\n  text: string;\n  size: \"small\" | \"normal\" | \"big\";\n  handleClick: () => void;\n}\n\nconst RedButton:FC<Props> = (props) => {\n  const className = `red-button ${props.size}`;\n\n  return (\n    <button className={className} onClick={props.handleClick}>\n      {props.text}\n    </button>\n  );\n};\n\nexport default RedButton;\n","import { useNavigate } from 'react-router-dom';\nimport RedButton from '../../RedButton';\n\nconst TryNowButton = () => {\n  const navigate = useNavigate();\n  const handleClick = () => navigate('collections');\n\n  return (<RedButton text=\"Try now!\" size=\"big\" handleClick={handleClick}/>);\n};\n\nexport default TryNowButton;\n","export default __webpack_public_path__ + \"static/media/ManWithLaptop.6a91ad9f.svg\";","import PageDescription from '../PageDescription';\nimport { PageType } from '../../../types/PageType';\nimport TryNowButton from './TryNowButton';\nimport src from '../../../assets/svg/ManWithLaptop.svg';\nimport '../../css/main/home/Home.css';\n\nconst Home = () => (\n    <main>\n      <PageDescription pageType={PageType.Home}/>\n      <div id=\"content\">\n        <TryNowButton/>\n        <img src={src} alt=\"Man sitting with a laptop\"/>\n      </div>\n    </main>\n);\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Home from \"./components/main/home/Home\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Routes>\n        <Route path=\"MuseumAggregator\" element={<App/>}>\n          <Route index element={<Home/>}/>\n          <Route path=\"home\" element={<Home/>}/>\n          <Route path=\"collections\" element={<p>Collections</p>}/>\n          <Route path=\"random\" element={<p>Random</p>}/>\n          <Route path=\"favourites\" element={<p>Favourites</p>}/>\n          <Route path=\"attribution\" element={<p>Attribution</p>}/>\n          <Route path=\"*\" element={<p>Not found</p>}/>\n        </Route>\n      </Routes>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('app-root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}